{"ast":null,"code":"import _classCallCheck from \"/Users/bool/Desktop/_projects/_udacity_nanodegree/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"/Users/bool/Desktop/_projects/_udacity_nanodegree/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _possibleConstructorReturn from \"/Users/bool/Desktop/_projects/_udacity_nanodegree/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/possibleConstructorReturn\";\nimport _getPrototypeOf from \"/Users/bool/Desktop/_projects/_udacity_nanodegree/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/getPrototypeOf\";\nimport _inherits from \"/Users/bool/Desktop/_projects/_udacity_nanodegree/reactnd-contacts-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nvar _jsxFileName = \"/Users/bool/Desktop/_projects/_udacity_nanodegree/reactnd-contacts-app/src/exercises/ChatWindow.js\";\nimport React, { Component } from \"react\";\nimport AddMessage from \"./AddMessage\";\nimport MessageHistory from \"./MessageHistory\";\nimport PropTypes from \"prop-types\";\n/*\nThis component passes a callback function to AddMessage (called \"onMessage\")\nbecause we will need to add new messages to the message history in BOTH chat windows.\nBecause BOTH chat windows need access to the messages piece of state, that piece of\nstate will live in the App.js file. That means that the callback function\nwill be passed from the App Component all the way down to the AddMessage Component.\n*/\n\nvar ChatWindow =\n/*#__PURE__*/\nfunction (_Component) {\n  _inherits(ChatWindow, _Component);\n\n  function ChatWindow() {\n    var _getPrototypeOf2;\n\n    var _this;\n\n    _classCallCheck(this, ChatWindow);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _possibleConstructorReturn(this, (_getPrototypeOf2 = _getPrototypeOf(ChatWindow)).call.apply(_getPrototypeOf2, [this].concat(args)));\n\n    _this.onMessage = function (message) {\n      //The callback is getting called.\n      _this.props.onMessage(_this.props.user.username, message);\n    };\n\n    return _this;\n  }\n\n  _createClass(ChatWindow, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          messages = _this$props.messages,\n          user = _this$props.user;\n      return React.createElement(\"div\", {\n        className: \"chat-window\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 23\n        },\n        __self: this\n      }, React.createElement(\"h2\", {\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 24\n        },\n        __self: this\n      }, \"Super Awesome Chat\"), React.createElement(\"div\", {\n        className: \"name sender\",\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 25\n        },\n        __self: this\n      }, user.username), React.createElement(MessageHistory, {\n        messages: messages,\n        user: user,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 26\n        },\n        __self: this\n      }), React.createElement(AddMessage, {\n        onMessage: this.onMessage,\n        __source: {\n          fileName: _jsxFileName,\n          lineNumber: 27\n        },\n        __self: this\n      }));\n    }\n  }]);\n\n  return ChatWindow;\n}(Component);\n\nChatWindow.propTypes = {\n  onMessage: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  messages: PropTypes.array.isRequired\n};\nexport default ChatWindow;","map":{"version":3,"sources":["/Users/bool/Desktop/_projects/_udacity_nanodegree/reactnd-contacts-app/src/exercises/ChatWindow.js"],"names":["React","Component","AddMessage","MessageHistory","PropTypes","ChatWindow","onMessage","message","props","user","username","messages","propTypes","func","isRequired","object","array"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,UAAP,MAAuB,cAAvB;AACA,OAAOC,cAAP,MAA2B,kBAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AAEA;;;;;;;;IAOMC,U;;;;;;;;;;;;;;;;;;UACJC,S,GAAY,UAACC,OAAD,EAAa;AACvB;AACA,YAAKC,KAAL,CAAWF,SAAX,CAAqB,MAAKE,KAAL,CAAWC,IAAX,CAAgBC,QAArC,EAA+CH,OAA/C;AACD,K;;;;;;;6BAEQ;AAAA,wBACoB,KAAKC,KADzB;AAAA,UACCG,QADD,eACCA,QADD;AAAA,UACWF,IADX,eACWA,IADX;AAGP,aACE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SACE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,8BADF,EAEE;AAAK,QAAA,SAAS,EAAC,aAAf;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,SAA8BA,IAAI,CAACC,QAAnC,CAFF,EAGE,oBAAC,cAAD;AAAgB,QAAA,QAAQ,EAAEC,QAA1B;AAAoC,QAAA,IAAI,EAAEF,IAA1C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAHF,EAIE,oBAAC,UAAD;AAAY,QAAA,SAAS,EAAE,KAAKH,SAA5B;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,QAJF,CADF;AAQD;;;;EAjBsBL,S;;AAoBzBI,UAAU,CAACO,SAAX,GAAuB;AACrBN,EAAAA,SAAS,EAAEF,SAAS,CAACS,IAAV,CAAeC,UADL;AAErBL,EAAAA,IAAI,EAAEL,SAAS,CAACW,MAAV,CAAiBD,UAFF;AAGrBH,EAAAA,QAAQ,EAAEP,SAAS,CAACY,KAAV,CAAgBF;AAHL,CAAvB;AAMA,eAAeT,UAAf","sourcesContent":["import React, { Component } from \"react\";\nimport AddMessage from \"./AddMessage\";\nimport MessageHistory from \"./MessageHistory\";\nimport PropTypes from \"prop-types\";\n\n/*\nThis component passes a callback function to AddMessage (called \"onMessage\")\nbecause we will need to add new messages to the message history in BOTH chat windows.\nBecause BOTH chat windows need access to the messages piece of state, that piece of\nstate will live in the App.js file. That means that the callback function\nwill be passed from the App Component all the way down to the AddMessage Component.\n*/\nclass ChatWindow extends Component {\n  onMessage = (message) => {\n    //The callback is getting called.\n    this.props.onMessage(this.props.user.username, message);\n  };\n\n  render() {\n    const { messages, user } = this.props;\n\n    return (\n      <div className=\"chat-window\">\n        <h2>Super Awesome Chat</h2>\n        <div className=\"name sender\">{user.username}</div>\n        <MessageHistory messages={messages} user={user} />\n        <AddMessage onMessage={this.onMessage} />\n      </div>\n    );\n  }\n}\n\nChatWindow.propTypes = {\n  onMessage: PropTypes.func.isRequired,\n  user: PropTypes.object.isRequired,\n  messages: PropTypes.array.isRequired,\n};\n\nexport default ChatWindow;\n"]},"metadata":{},"sourceType":"module"}